#include "MltClckMPBttn.h"
#include <Arduino.h>

MltClckMPBttn::MltClckMPBttn(uint8_t mpbPin)
    : DbncdDlydMPBttn(mpbPin, true) // true = use internal pullup
{
    setDebounceTime(50);         // ms
    setLongClickTime(1000);      // ms
    setMultiClickGap(400);       // ms
    setMaxMultiClicks(4);        // up to quadruple click
}

bool MltClckMPBttn::isLongClick() {
    int reading = digitalRead(_pin);
    unsigned long now = millis();

    if (reading != _lastButtonState) {
        _lastDebounceTime = now;
    }

    if ((now - _lastDebounceTime) > _debounceTime) {
        if (_lastButtonState == HIGH && reading == LOW) {
            _buttonDownTime = now;
            _longClickDetected = false;
        }
        if (_lastButtonState == LOW && reading == HIGH) {
            unsigned long pressDuration = now - _buttonDownTime;
            if (pressDuration >= _longClickTime) {
                _longClickDetected = true;
                _waitingForMulti = false;
            }
        }
    }
    _lastButtonState = reading;

    if (_longClickDetected) {
        _longClickDetected = false;
        return true;
    }
    return false;
}

int MltClckMPBttn::getClicks() {
    int reading = digitalRead(_pin);
    unsigned long now = millis();
    int result = 0;

    if (reading != _lastButtonState) {
        _lastDebounceTime = now;
    }

    if ((now - _lastDebounceTime) > _debounceTime) {
        if (_lastButtonState == HIGH && reading == LOW) {
            _buttonDownTime = now;
        }
        if (_lastButtonState == LOW && reading == HIGH) {
            unsigned long pressDuration = now - _buttonDownTime;
            if (pressDuration < _longClickTime) {
                _clickCount++;
                _waitingForMulti = true;
                _lastUpTime = now;
            }
        }
    }

    if (_waitingForMulti && (now - _lastUpTime) > _multiClickGap) {
        result = _clickCount;
        _clickCount = 0;
        _waitingForMulti = false;
    }

    _lastButtonState = reading;
    return result;
}

int MltClckMPBttn::getClickType() {
    if (isLongClick()) return 0;
    int clicks = getClicks();
    if (clicks > 0 && clicks <= 4) return clicks;
    return -1;
}

/*#include <MltClckMPBttn.h>

const int mpbPin = 2;
MltClckMPBttn mouseButton(mpbPin);

void setup() {
    Serial.begin(115200);
}

void loop() {
    int clickType = mouseButton.getClickType();
    if (clickType != -1) {
        switch (clickType) {
            case 0: Serial.println("Long Click"); break;
            case 1: Serial.println("Single Click"); break;
            case 2: Serial.println("Double Click"); break;
            case 3: Serial.println("Triple Click"); break;
            case 4: Serial.println("Quadruple Click"); break;
        }
    }
}*/